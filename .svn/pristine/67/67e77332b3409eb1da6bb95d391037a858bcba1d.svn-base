package com.wonders.base.example.controller;

import com.wonders.base.common.CommonService;
import com.wonders.base.example.entity.ExampleEntity;
import gov.util.jpa.Query;
import io.swagger.annotations.*;
import org.apache.commons.lang.StringUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;
import java.util.List;
//当前类的描述
@Api(tags = "部门模块接口", description = "后台管理服务部门模块接口")
@RestController
@RequestMapping(value = "/example")
public class ExampleController {
    @Autowired
    private CommonService commonService;

    /**
     * 新增or修改
     * @return
     */
    @RequestMapping(value = "/saveOrEdit/{stId}/{stName}/{stIdCard}/{stAddress}" , method = RequestMethod.POST)
    //描述一个http请求的操作
    @ApiOperation(value = "新增or修改一个用户",httpMethod = "POST")
    //http请求参数集
    @ApiImplicitParams({
            //参数的描述
            @ApiImplicitParam(name = "stId", value = "用户id", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "stName", value = "用户名", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "stIdCard", value = "用户身份证号码", required = true, dataType = "String", paramType = "path"),
            @ApiImplicitParam(name = "stAddress", value = "用户地址", required = true, dataType = "String", paramType = "path")
    })
    public Object Save(@PathVariable("stId") String stId
            , @PathVariable("stName") String stName
            , @PathVariable("stIdCard") String stIdCard
            , @PathVariable("stAddress") String stAddress) throws Exception{
        ExampleEntity gsEntity=new ExampleEntity();
        if(StringUtils.isNotBlank(stId)){
            gsEntity=commonService.find(ExampleEntity.class,stId);
            if (gsEntity == null)
                gsEntity = new ExampleEntity();
        }
        if(StringUtils.isNotBlank(stName)){
            gsEntity.setStName(stName);
        }
        if(StringUtils.isNotBlank(stIdCard)){
            gsEntity.setStIdCard(stIdCard);
        }
        if(StringUtils.isNotBlank(stAddress)){
            gsEntity.setStAddress(stAddress);
        }
        commonService.save(gsEntity);
        return "success";
    }

    /**
     * 查询列表
     * @return
     */
    @RequestMapping(value = "/getList", method = RequestMethod.GET)
    @ApiOperation(value = "查询所有用户", httpMethod = "GET")
    public List<ExampleEntity> getList(){
        Query query= Query.from(ExampleEntity.class);
        List<ExampleEntity> list= commonService.findAll(query);
        return list;
    }

    @RequestMapping(value = "/getDetail/{stId}" , method = RequestMethod.GET)
    @ApiOperation(value = "查询一个用户详细信息", httpMethod = "GET")
    @ApiImplicitParam(name = "stId", value = "用户Id", dataType = "String", required = true, paramType = "path")
    public ExampleEntity getDetail(@PathVariable("stId") String stId){
        ExampleEntity embo = commonService.find(ExampleEntity.class,stId);
        return embo;
    }

    /**
     * 删除
     * @param stId
     * @return
     */
    @RequestMapping(value = "/delete/{stId}", method = RequestMethod.DELETE)
    @ApiOperation(value = "删除用户")
    @ApiImplicitParam(name = "stId", value = "用户Id", dataType = "String", required = true, paramType = "path")
    public Object delete(@PathVariable("stId") String stId){
        try{
            if(StringUtils.isNotBlank(stId)){
                commonService.delete(ExampleEntity.class,stId);
                return "success";
            }
        }catch (Exception e){
            e.printStackTrace();
            return "error";
        }
        return "error";
    }
}
